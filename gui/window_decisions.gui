window = {
	name = "decisions_view"
	parentanchor = top|right
	layer = windows_layer
	movable = no

	using = Window_Size_MainTab

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		#using = Sound_WindowShow_Standard
		using = Window_Position_MainTab

		### EK EDIT: To start the CoE window with the members tab
		on_start = "[GetVariableSystem.Set( 'council_of_the_eight_view_tabs', 'members' )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		#using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide

		#on_start = "[GetVariableSystem.Clear('patron_window_open')]"
		on_start = "[GetVariableSystem.Clear('decision_tab')]"
		#on_start = "[GetScriptedGui('patron_clear').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
		on_start = "[GetVariableSystem.Clear( 'patron_decision_button' )]"
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 13

		#visible = "[Not(Or(GetVariableSystem.Exists( 'patron_window_open' ), GetVariableSystem.Exists( 'societies_window_open' )))]"
		visible = "[Not(GetVariableSystem.Exists( 'decision_tab' ))]"

		# using = Window_Background

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
			using = Window_Position_MainTab
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
			using = Window_Position_MainTab_Hide
		}

		widget = {
			size = { 100% 100% }

			vbox = {
				using = Window_Margins

				header_pattern = {
					layoutpolicy_horizontal = expanding

					blockoverride "header_text"
					{
						text = "DECISIONS_VIEW_TITLE"
					}

					blockoverride "button_close"
					{
						onclick = "[DecisionsView.Close]"
					}
				}

				scrollbox = {
					name = "decision_scrollarea"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					background = {
						texture = "gfx/interface/skinned/illustrations/decisions.dds"
						fittype = end
						alpha = 0.4
						framesize = { 1200 848 }

						using = Mask_Rough_Edges

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							mirror = vertical
						}
					}

					blockoverride "scrollbox_content"
					{
						name = "decisions_main_container"
						spacing = 15

						vbox = {
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_label_center = {
								text = "DECISIONS_VIEW_MAJOR_DECISIONS"
							}

							text_single = {
								visible = "[IsDataModelEmpty(DecisionsView.GetDecisions)]"
								text = "DECISIONS_VIEW_MAJOR_NOT_AVAILABLE"
								default_format = "#low;italic"
							}

							vbox = {
								name = "major_decisions"
								datamodel = "[DecisionsView.GetDecisions]"
								layoutpolicy_horizontal = expanding
								spacing = 5

								item = {
									button_decision_entry = {
										datacontext = "[DecisionsViewItem.GetDecision]"
										visible = "[Decision.IsMajor]"
										layoutpolicy_horizontal = expanding
										size = { -1 55 }

										blockoverride "size_illustration" {
											size = { 250 53 }
										}

										onclick = "[DecisionsViewItem.OnSelect]"
										onclick = "[PdxGuiTriggerAllAnimations('decisions_detail_refresh')]"
										down = "[DecisionsViewItem.IsSelected]"

										blockoverride "default_format" {
											default_format = "#medium"
										}
									}
								}
							}

						}

						divider_light = {
							layoutpolicy_horizontal = expanding
						}

						vbox = {
							name = "decisions_container"
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_label_center = {
								text = "DECISIONS_VIEW_DECISIONS"
							}

							vbox = {
								name = "regular_decisions"
								datamodel = "[DecisionsView.GetDecisions]"
								layoutpolicy_horizontal = expanding
								spacing = 5

								item = {
									button_decision_entry = {
										datacontext = "[DecisionsViewItem.GetDecision]"
										visible = "[Not(Decision.IsMajor)]"
										layoutpolicy_horizontal = expanding

										onclick = "[DecisionsViewItem.OnSelect]"
										onclick = "[PdxGuiTriggerAllAnimations('decisions_detail_refresh')]"
										down = "[DecisionsViewItem.IsSelected]"
									}
								}
							}
						}
					}
				}
			}
		}
	}

	margin_widget = {
		name = "patron_window"
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 20
		alwaystransparent = no

		#visible = "[GetVariableSystem.Exists( 'patron_window_open' )]"
		visible = "[GetVariableSystem.HasValue( 'decision_tab', 'patron' )]"

		# using = Window_Background

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
			using = Window_Position_MainTab

			#on_start = "[GetVariableSystem.Clear( 'patron_decision_button' )]"
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
			using = Window_Position_MainTab_Hide

			on_start = "[GetVariableSystem.Clear( 'patron_decision_button' )]"
		}

		widget = {
			size = { 100% 100% }
			#using = Window_Background
			#using = Window_Decoration_Thin

			vbox = {
				using = Window_Margins

				header_with_picture = {
					layoutpolicy_horizontal = expanding

					blockoverride "header_text"
					{
						text = "PATRON_VIEW_TITLE"
					}

					blockoverride "button_close"
					{
						#datacontext = "[GetScriptedGui('patron_gui_close')]"
						#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						#onclick = "[GetVariableSystem.Clear( 'patron_window_open' )]"
						onclick = "[GetVariableSystem.Clear('decision_tab')]"
						onclick = "[DecisionsView.Close]"
					}

					blockoverride "illustration_texture"
					{
						texture = "gfx/interface/patron_window/header_patrons.dds" #replace as shrine pic?
					}
				}

				#Selection Tab
				vbox = {
					name = "patron_selection_tab"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					#datacontext = "[GetScriptedGui('patron_selection_tab_toggle')]"
					#visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					visible = "[Not(GetVariableSystem.Exists('patron_active'))]"

					# #patron details
					# hbox = {
					# 	size = { 520 170 }
					# 	margin = { 0 5 }
					# 	spacing = 5

					# 	background = {
					# 		margin_left = 80
					# 		margin_right = 80
					# 		margin_top = 0
					# 		margin_bottom = 0

					# 		texture = "gfx/interface/component_tiles/tile_dark_area_02.dds"
					# 		spriteType = Corneredstretched
					# 		spriteborder = { 40 8 }

					# 		modify_texture = {
					# 			name = "mask"
					# 			texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
					# 			spriteType = Corneredstretched
					# 			spriteborder = { 0 0 }
					# 			blend_mode = alphamultiply
					# 		}
					# 		modify_texture = {
					# 			name = "mask"
					# 			texture = "gfx/interface/component_masks/mask_legacy_track.dds"
					# 			spriteType = Corneredstretched
					# 			spriteborder = { 0 0 }
					# 			blend_mode = alphamultiply
					# 		}
					# 	}

					# 	# Patron Icons #
					# 	vbox = {
					# 		visible = "[GetPlayer.MakeScope.Var('patron_shown').IsSet]"
					# 		#Azura
					# 		button_patron_icon = {
					# 			visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('azura') )]"

					# 			blockoverride "patron_icon" {
					# 				texture = "gfx/interface/patrons/patron_azura.dds"
					# 			}
					# 		}

					# 		#Boethiah
					# 		button_patron_icon = {
					# 			visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('boethiah') )]"

					# 			blockoverride "patron_icon" {
					# 				texture = "gfx/interface/patrons/patron_boethiah.dds"
					# 			}
					# 		}

					# 		#Clavicus Vile
					# 		button_patron_icon = {
					# 			visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('clavicus') )]"

					# 			blockoverride "patron_icon" {
					# 				texture = "gfx/interface/patrons/patron_clavicus.dds"
					# 			}
					# 		}

					# 		#Hermaeus Mora
					# 		button_patron_icon = {
					# 			visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('hermaeus') )]"

					# 			blockoverride "patron_icon" {
					# 				texture = "gfx/interface/patrons/patron_hermaeus.dds"
					# 			}
					# 		}

					# 		#Hircine
					# 		button_patron_icon = {
					# 			visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('hircine') )]"

					# 			blockoverride "patron_icon" {
					# 				texture = "gfx/interface/patrons/patron_hircine.dds"
					# 			}
					# 		}

					# 		#Jyggalag
					# 		button_patron_icon = {
					# 			visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('jyggalag') )]"

					# 			blockoverride "patron_icon" {
					# 				texture = "gfx/interface/patrons/patron_jyggalag.dds"
					# 			}
					# 		}

					# 		#Malacath
					# 		button_patron_icon = {
					# 			visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('malacath') )]"

					# 			blockoverride "patron_icon" {
					# 				texture = "gfx/interface/patrons/patron_malacath.dds"
					# 			}
					# 		}

					# 		#Mehrunes Dagon
					# 		button_patron_icon = {
					# 			visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('mehrunes') )]"

					# 			blockoverride "patron_icon" {
					# 				texture = "gfx/interface/patrons/patron_mehrunes.dds"
					# 			}
					# 		}

					# 		#Mephala
					# 		button_patron_icon = {
					# 			visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('mephala') )]"

					# 			blockoverride "patron_icon" {
					# 				texture = "gfx/interface/patrons/patron_mephala.dds"
					# 			}
					# 		}

					# 		#Meridia
					# 		button_patron_icon = {
					# 			visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('meridia') )]"

					# 			blockoverride "patron_icon" {
					# 				texture = "gfx/interface/patrons/patron_meridia.dds"
					# 			}
					# 		}

					# 		#Molag Bal
					# 		button_patron_icon = {
					# 			visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('molag') )]"

					# 			blockoverride "patron_icon" {
					# 				texture = "gfx/interface/patrons/patron_molag.dds"
					# 			}
					# 		}

					# 		#Namira
					# 		button_patron_icon = {
					# 			visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('namira') )]"

					# 			blockoverride "patron_icon" {
					# 				texture = "gfx/interface/patrons/patron_namira.dds"
					# 			}
					# 		}

					# 		#Nocturnal
					# 		button_patron_icon = {
					# 			visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('nocturnal') )]"

					# 			blockoverride "patron_icon" {
					# 				texture = "gfx/interface/patrons/patron_nocturnal.dds"
					# 			}
					# 		}

					# 		#Peryite
					# 		button_patron_icon = {
					# 			visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('peryite') )]"

					# 			blockoverride "patron_icon" {
					# 				texture = "gfx/interface/patrons/patron_peryite.dds"
					# 			}
					# 		}

					# 		#Sanguine
					# 		button_patron_icon = {
					# 			visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('sanguine') )]"

					# 			blockoverride "patron_icon" {
					# 				texture = "gfx/interface/patrons/patron_sanguine.dds"
					# 			}
					# 		}

					# 		#Sheogorath
					# 		button_patron_icon = {
					# 			visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('sheogorath') )]"

					# 			blockoverride "patron_icon" {
					# 				texture = "gfx/interface/patrons/patron_sheogorath.dds"
					# 			}
					# 		}

					# 		#Vaermina
					# 		button_patron_icon = {
					# 			visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('vaermina') )]"

					# 			blockoverride "patron_icon" {
					# 				texture = "gfx/interface/patrons/patron_vaermina.dds"
					# 			}
					# 		}
					# 	}

					# 	vbox = {
					# 		size = { 470 160 }

					# 		vbox = {
					# 			#parentanchor = left
					# 			text_single = {
					# 				text = selected_patron_name #defined by custom loc
					# 				align = center
					# 				fontsize = 20
					# 			}
					# 			text_multi = {
					# 				text = selected_patron_desc #defined by custom loc
					# 				size = { 450 150 }
					# 				maximumsize = { 450 150 }
					# 				align = center
					# 				fontsize = 16
					# 				autoresize = yes
					# 			}
					# 			spacer = {
					# 				size = { 0 15 }
					# 			}
					# 			button_frontend = {
					# 				name = "patron_button_commune"
					# 				#position = { 0 5 }
					# 				size = { 160 40 }
					# 				text = "COMMUNE"
					# 				tooltip = patron_commune_tt

					# 				datacontext = "[GetScriptedGui('patron_interaction_tab_toggle')]"
					# 				visible = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					# 				#enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					# 				onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					# 				# visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					# 			}
					# 		}
					# 	}
					# }

					#patron list
					scrollbox = {
						name = "patrons_scrollarea"
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						background = {
							texture = "gfx/interface/illustrations/event_scenes/temple.dds"
							margin = { -5 0 }
							fittype = end
							alpha = 0.4
							framesize = { 1200 848 }

							modify_texture = {
								blend_mode = alphamultiply
								mirror = vertical
								texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							}
						}

						blockoverride "scrollbox_content"
						{
							name = "patrons_main_container"
							#spacing = 20
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_single = {
								datacontext = "[GetScriptedGui('patron_has_no_patrons')]"
								visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								text = "NO_PATRONS"
								default_format = "#low;italic"
							}

							text_label_center = {
								datacontext = "[GetScriptedGui('patron_has_princes')]"
								visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								text = "PATRON_DAEDRIC_PRINCES"
							}

							datamodel = "[GuiScope.SetRoot(GetPlayer.MakeScope).GetScriptValueBreakdown('active_patrons').GetSubValues]"

							item = {
								# text_single = {
								# 	text = "[ValueBreakdown.GetName]"
								# }
								button_patron_entry = {
									# 	#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
									# 	onmousehierarchyenter = "[GetVariableSystem.Set('patron_active', ValueBreakdown.GetName)]"
									# 	#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
									# 	onmousehierarchyleave = "[GetVariableSystem.Clear('patron_active')]"

									# blockoverride "patron_entry_icon" {
									# 	texture = "gfx/interface/patrons/patron_azura.dds"
									# }
									# blockoverride "patron_entry_name" {
									# 	text = "[Localize(Concatenate(Concatenate('patron', ValueBreakdown.GetName), '_name'))]" #patron_azura_name
									# }
									# blockoverride "patron_entry_desc" {
									# 	text = "[Localize(Concatenate(Concatenate('patron', ValueBreakdown.GetName), '_long_desc'))]" #patron_azura_long_desc
									# }
									# blockoverride "patron_summary_desc" {
									# 	text = "[Localize(Concatenate(Concatenate('patron', ValueBreakdown.GetName), '_summary'))]" #patron_azura_summary
									# }
									# blockoverride "patron_visible_unhover" {
									# 	visible = "[Not(GetVariableSystem.HasValue('patron_active', ValueBreakdown.GetName))]"
									# }
									# blockoverride "patron_visible_hover" {
									# 	visible = "[GetVariableSystem.HasValue('patron_active', ValueBreakdown.GetName)]"
									# }
								}
							}

							# vbox = {
							# 	layoutpolicy_horizontal = expanding
							# 	spacing = 10

							# 	text_single = {
							# 		datacontext = "[GetScriptedGui('patron_has_no_patrons')]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 		text = "NO_PATRONS"
							# 		default_format = "#low;italic"
							# 	}

							# 	text_label_center = {
							# 		datacontext = "[GetScriptedGui('patron_has_princes')]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 		text = "PATRON_DAEDRIC_PRINCES"
							# 	}

							# 	# Azura #
							# 	vbox = {
							# 		name = "patron_azura"
							# 		datacontext = "[GetScriptedGui('patron_azura_shown')]"
							# 		datacontext = "[GuiScope.SetRoot(MakeScopeFlag('azura')).GetRootScope]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

							# 		#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
							# 		onmousehierarchyenter = "[GetVariableSystem.Set('patron_active', 'azura')]"
							# 		#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
							# 		onmousehierarchyleave = "[GetVariableSystem.Clear('patron_active')]"

							# 		button_patron_entry = {
							# 			#datacontext = "[GetScriptedGui('patron_azura_shown')]"
							# 			#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 			#down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'azura' ) )]"

							# 			#visible = "[Not(GetVariableSystem.HasValue('patron_active', 'azura'))]"

							# 			blockoverride "patron_entry_icon" {
							# 				texture = "gfx/interface/patrons/patron_azura.dds"
							# 			}
							# 			blockoverride "patron_entry_name" {
							# 				text = patron_azura_name
							# 			}
							# 			blockoverride "patron_entry_desc" {
							# 				text = patron_azura_long_desc
							# 			}
							# 			blockoverride "patron_summary_desc" {
							# 				text = patron_azura_summary
							# 			}
							# 			blockoverride "patron_visible_unhover" {
							# 				visible = "[Not(GetVariableSystem.HasValue('patron_active', 'azura'))]"
							# 			}
							# 			blockoverride "patron_visible_hover" {
							# 				visible = "[GetVariableSystem.HasValue('patron_active', 'azura')]"
							# 			}
							# 		}
							# 	}

							# 	# Boethiah #
							# 	vbox = {
							# 		name = "patron_boethiah"
							# 		datacontext = "[GetScriptedGui('patron_boethiah_shown')]"
							# 		datacontext = "[GuiScope.SetRoot(MakeScopeFlag('boethiah')).GetRootScope]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

							# 		#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
							# 		onmousehierarchyenter = "[GetVariableSystem.Set('patron_active', 'boethiah')]"
							# 		#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
							# 		onmousehierarchyleave = "[GetVariableSystem.Clear('patron_active')]"

							# 		button_patron_entry = {
							# 			#datacontext = "[GetScriptedGui('patron_boethiah_shown')]"
							# 			#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 			#down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'boethiah' ) )]"

							# 			blockoverride "patron_entry_icon" {
							# 				texture = "gfx/interface/patrons/patron_boethiah.dds"
							# 			}
							# 			blockoverride "patron_entry_name" {
							# 				text = patron_boethiah_name
							# 			}
							# 			blockoverride "patron_entry_desc" {
							# 				text = patron_boethiah_long_desc
							# 			}
							# 			blockoverride "patron_summary_desc" {
							# 				text = patron_boethiah_summary
							# 			}
							# 			blockoverride "patron_visible_unhover" {
							# 				visible = "[Not(GetVariableSystem.HasValue('patron_active', 'boethiah'))]"
							# 			}
							# 			blockoverride "patron_visible_hover" {
							# 				visible = "[GetVariableSystem.HasValue('patron_active', 'boethiah')]"
							# 			}
							# 		}
							# 	}

							# 	# Clavicus Vile #
							# 	vbox = {
							# 		name = "patron_clavicus"
							# 		datacontext = "[GetScriptedGui('patron_clavicus_shown')]"
							# 		datacontext = "[GuiScope.SetRoot(MakeScopeFlag('clavicus')).GetRootScope]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

							# 		#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
							# 		onmousehierarchyenter = "[GetVariableSystem.Set('patron_active', 'clavicus')]"
							# 		#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
							# 		onmousehierarchyleave = "[GetVariableSystem.Clear('patron_active')]"

							# 		button_patron_entry = {
							# 			#datacontext = "[GetScriptedGui('patron_clavicus_shown')]"
							# 			#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 			#down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'clavicus' ) )]"

							# 			blockoverride "patron_entry_icon" {
							# 				texture = "gfx/interface/patrons/patron_clavicus.dds"
							# 			}
							# 			blockoverride "patron_entry_name" {
							# 				text = patron_clavicus_name
							# 			}
							# 			blockoverride "patron_entry_desc" {
							# 				text = patron_clavicus_long_desc
							# 			}
							# 			blockoverride "patron_summary_desc" {
							# 				text = patron_clavicus_summary
							# 			}
							# 			blockoverride "patron_visible_unhover" {
							# 				visible = "[Not(GetVariableSystem.HasValue('patron_active', 'clavicus'))]"
							# 			}
							# 			blockoverride "patron_visible_hover" {
							# 				visible = "[GetVariableSystem.HasValue('patron_active', 'clavicus')]"
							# 			}
							# 		}
							# 	}

							# 	# Hermaeus Mora #
							# 	vbox = {
							# 		name = "patron_hermaeus"
							# 		datacontext = "[GetScriptedGui('patron_hermaeus_shown')]"
							# 		datacontext = "[GuiScope.SetRoot(MakeScopeFlag('hermaeus')).GetRootScope]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

							# 		#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
							# 		onmousehierarchyenter = "[GetVariableSystem.Set('patron_active', 'hermaeus')]"
							# 		#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
							# 		onmousehierarchyleave = "[GetVariableSystem.Clear('patron_active')]"

							# 		button_patron_entry = {
							# 			#datacontext = "[GetScriptedGui('patron_hermaeus_shown')]"
							# 			#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 			#down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'hermaeus' ) )]"

							# 			blockoverride "patron_entry_icon" {
							# 				texture = "gfx/interface/patrons/patron_hermaeus.dds"
							# 			}
							# 			blockoverride "patron_entry_name" {
							# 				text = patron_hermaeus_name
							# 			}
							# 			blockoverride "patron_entry_desc" {
							# 				text = patron_hermaeus_long_desc
							# 			}
							# 			blockoverride "patron_summary_desc" {
							# 				text = patron_hermaeus_summary
							# 			}
							# 			blockoverride "patron_visible_unhover" {
							# 				visible = "[Not(GetVariableSystem.HasValue('patron_active', 'hermaeus'))]"
							# 			}
							# 			blockoverride "patron_visible_hover" {
							# 				visible = "[GetVariableSystem.HasValue('patron_active', 'hermaeus')]"
							# 			}
							# 		}
							# 	}

							# 	# Hircine #
							# 	vbox = {
							# 		name = "patron_hircine"
							# 		datacontext = "[GetScriptedGui('patron_hircine_shown')]"
							# 		datacontext = "[GuiScope.SetRoot(MakeScopeFlag('hircine')).GetRootScope]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

							# 		#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
							# 		onmousehierarchyenter = "[GetVariableSystem.Set('patron_active', 'hircine')]"
							# 		#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
							# 		onmousehierarchyleave = "[GetVariableSystem.Clear('patron_active')]"

							# 		button_patron_entry = {
							# 			#datacontext = "[GetScriptedGui('patron_hircine_shown')]"
							# 			#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 			#down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'hircine' ) )]"

							# 			blockoverride "patron_entry_icon" {
							# 				texture = "gfx/interface/patrons/patron_hircine.dds"
							# 			}
							# 			blockoverride "patron_entry_name" {
							# 				text = patron_hircine_name
							# 			}
							# 			blockoverride "patron_entry_desc" {
							# 				text = patron_hircine_long_desc
							# 			}
							# 			blockoverride "patron_summary_desc" {
							# 				text = patron_hircine_summary
							# 			}
							# 			blockoverride "patron_visible_unhover" {
							# 				visible = "[Not(GetVariableSystem.HasValue('patron_active', 'hircine'))]"
							# 			}
							# 			blockoverride "patron_visible_hover" {
							# 				visible = "[GetVariableSystem.HasValue('patron_active', 'hircine')]"
							# 			}
							# 		}
							# 	}

							# 	# Jyggalag #
							# 	vbox = {
							# 		name = "patron_jyggalag"
							# 		datacontext = "[GetScriptedGui('patron_jyggalag_shown')]"
							# 		datacontext = "[GuiScope.SetRoot(MakeScopeFlag('jyggalag')).GetRootScope]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

							# 		#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
							# 		onmousehierarchyenter = "[GetVariableSystem.Set('patron_active', 'jyggalag')]"
							# 		#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
							# 		onmousehierarchyleave = "[GetVariableSystem.Clear('patron_active')]"

							# 		button_patron_entry = {
							# 			#datacontext = "[GetScriptedGui('patron_jyggalag_shown')]"
							# 			#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 			#down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'jyggalag' ) )]"

							# 			blockoverride "patron_entry_icon" {
							# 				texture = "gfx/interface/patrons/patron_jyggalag.dds"
							# 			}
							# 			blockoverride "patron_entry_name" {
							# 				text = patron_jyggalag_name
							# 			}
							# 			blockoverride "patron_entry_desc" {
							# 				text = patron_jyggalag_long_desc
							# 			}
							# 			blockoverride "patron_summary_desc" {
							# 				text = patron_jyggalag_summary
							# 			}
							# 			blockoverride "patron_visible_unhover" {
							# 				visible = "[Not(GetVariableSystem.HasValue('patron_active', 'jyggalag'))]"
							# 			}
							# 			blockoverride "patron_visible_hover" {
							# 				visible = "[GetVariableSystem.HasValue('patron_active', 'jyggalag')]"
							# 			}
							# 		}
							# 	}

							# 	# Malacath #
							# 	vbox = {
							# 		name = "patron_malacath"
							# 		datacontext = "[GetScriptedGui('patron_malacath_shown')]"
							# 		datacontext = "[GuiScope.SetRoot(MakeScopeFlag('malacath')).GetRootScope]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

							# 		#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
							# 		onmousehierarchyenter = "[GetVariableSystem.Set('patron_active', 'malacath')]"
							# 		#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
							# 		onmousehierarchyleave = "[GetVariableSystem.Clear('patron_active')]"

							# 		button_patron_entry = {
							# 			#datacontext = "[GetScriptedGui('patron_malacath_shown')]"
							# 			#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 			#down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'malacath' ) )]"

							# 			blockoverride "patron_entry_icon" {
							# 				texture = "gfx/interface/patrons/patron_malacath.dds"
							# 			}
							# 			blockoverride "patron_entry_name" {
							# 				text = patron_malacath_name
							# 			}
							# 			blockoverride "patron_entry_desc" {
							# 				text = patron_malacath_long_desc
							# 			}
							# 			blockoverride "patron_summary_desc" {
							# 				text = patron_malacath_summary
							# 			}
							# 			blockoverride "patron_visible_unhover" {
							# 				visible = "[Not(GetVariableSystem.HasValue('patron_active', 'malacath'))]"
							# 			}
							# 			blockoverride "patron_visible_hover" {
							# 				visible = "[GetVariableSystem.HasValue('patron_active', 'malacath')]"
							# 			}
							# 		}
							# 	}

							# 	# Mehrunes Dagon #
							# 	vbox = {
							# 		name = "patron_mehrunes"
							# 		datacontext = "[GetScriptedGui('patron_mehrunes_shown')]"
							# 		datacontext = "[GuiScope.SetRoot(MakeScopeFlag('mehrunes')).GetRootScope]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

							# 		#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
							# 		onmousehierarchyenter = "[GetVariableSystem.Set('patron_active', 'mehrunes')]"
							# 		#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
							# 		onmousehierarchyleave = "[GetVariableSystem.Clear('patron_active')]"

							# 		button_patron_entry = {
							# 			#datacontext = "[GetScriptedGui('patron_mehrunes_shown')]"
							# 			#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 			#down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'mehrunes' ) )]"

							# 			blockoverride "patron_entry_icon" {
							# 				texture = "gfx/interface/patrons/patron_mehrunes.dds"
							# 			}
							# 			blockoverride "patron_entry_name" {
							# 				text = patron_mehrunes_name
							# 			}
							# 			blockoverride "patron_entry_desc" {
							# 				text = patron_mehrunes_long_desc
							# 			}
							# 			blockoverride "patron_summary_desc" {
							# 				text = patron_mehrunes_summary
							# 			}
							# 			blockoverride "patron_visible_unhover" {
							# 				visible = "[Not(GetVariableSystem.HasValue('patron_active', 'mehrunes'))]"
							# 			}
							# 			blockoverride "patron_visible_hover" {
							# 				visible = "[GetVariableSystem.HasValue('patron_active', 'mehrunes')]"
							# 			}
							# 		}
							# 	}

							# 	# Mephala #
							# 	vbox = {
							# 		name = "patron_mephala"
							# 		datacontext = "[GetScriptedGui('patron_mephala_shown')]"
							# 		datacontext = "[GuiScope.SetRoot(MakeScopeFlag('mephala')).GetRootScope]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

							# 		#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
							# 		onmousehierarchyenter = "[GetVariableSystem.Set('patron_active', 'mephala')]"
							# 		#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
							# 		onmousehierarchyleave = "[GetVariableSystem.Clear('patron_active')]"

							# 		button_patron_entry = {
							# 			#datacontext = "[GetScriptedGui('patron_mephala_shown')]"
							# 			#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 			#down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'mephala' ) )]"

							# 			blockoverride "patron_entry_icon" {
							# 				texture = "gfx/interface/patrons/patron_mephala.dds"
							# 			}
							# 			blockoverride "patron_entry_name" {
							# 				text = patron_mephala_name
							# 			}
							# 			blockoverride "patron_entry_desc" {
							# 				text = patron_mephala_long_desc
							# 			}
							# 			blockoverride "patron_summary_desc" {
							# 				text = patron_mephala_summary
							# 			}
							# 			blockoverride "patron_visible_unhover" {
							# 				visible = "[Not(GetVariableSystem.HasValue('patron_active', 'mephala'))]"
							# 			}
							# 			blockoverride "patron_visible_hover" {
							# 				visible = "[GetVariableSystem.HasValue('patron_active', 'mephala')]"
							# 			}
							# 		}
							# 	}

							# 	# Meridia #
							# 	vbox = {
							# 		name = "patron_meridia"
							# 		datacontext = "[GetScriptedGui('patron_meridia_shown')]"
							# 		datacontext = "[GuiScope.SetRoot(MakeScopeFlag('meridia')).GetRootScope]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

							# 		#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
							# 		onmousehierarchyenter = "[GetVariableSystem.Set('patron_active', 'meridia')]"
							# 		#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
							# 		onmousehierarchyleave = "[GetVariableSystem.Clear('patron_active')]"

							# 		button_patron_entry = {
							# 			#datacontext = "[GetScriptedGui('patron_meridia_shown')]"
							# 			#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 			#down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'meridia' ) )]"

							# 			blockoverride "patron_entry_icon" {
							# 				texture = "gfx/interface/patrons/patron_meridia.dds"
							# 			}
							# 			blockoverride "patron_entry_name" {
							# 				text = patron_meridia_name
							# 			}
							# 			blockoverride "patron_entry_desc" {
							# 				text = patron_meridia_long_desc
							# 			}
							# 			blockoverride "patron_summary_desc" {
							# 				text = patron_meridia_summary
							# 			}
							# 			blockoverride "patron_visible_unhover" {
							# 				visible = "[Not(GetVariableSystem.HasValue('patron_active', 'meridia'))]"
							# 			}
							# 			blockoverride "patron_visible_hover" {
							# 				visible = "[GetVariableSystem.HasValue('patron_active', 'meridia')]"
							# 			}
							# 		}
							# 	}

							# 	# Molag Bal #
							# 	vbox = {
							# 		name = "patron_molag"
							# 		datacontext = "[GetScriptedGui('patron_molag_shown')]"
							# 		datacontext = "[GuiScope.SetRoot(MakeScopeFlag('molag')).GetRootScope]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

							# 		#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
							# 		onmousehierarchyenter = "[GetVariableSystem.Set('patron_active', 'molag')]"
							# 		#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
							# 		onmousehierarchyleave = "[GetVariableSystem.Clear('patron_active')]"

							# 		button_patron_entry = {
							# 			#datacontext = "[GetScriptedGui('patron_molag_shown')]"
							# 			#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 			#down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'molag' ) )]"

							# 			blockoverride "patron_entry_icon" {
							# 				texture = "gfx/interface/patrons/patron_molag.dds"
							# 			}
							# 			blockoverride "patron_entry_name" {
							# 				text = patron_molag_name
							# 			}
							# 			blockoverride "patron_entry_desc" {
							# 				text = patron_molag_long_desc
							# 			}
							# 			blockoverride "patron_summary_desc" {
							# 				text = patron_molag_summary
							# 			}
							# 			blockoverride "patron_visible_unhover" {
							# 				visible = "[Not(GetVariableSystem.HasValue('patron_active', 'molag'))]"
							# 			}
							# 			blockoverride "patron_visible_hover" {
							# 				visible = "[GetVariableSystem.HasValue('patron_active', 'molag')]"
							# 			}
							# 		}
							# 	}

							# 	# Namira #
							# 	vbox = {
							# 		name = "patron_namira"
							# 		datacontext = "[GetScriptedGui('patron_namira_shown')]"
							# 		datacontext = "[GuiScope.SetRoot(MakeScopeFlag('namira')).GetRootScope]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

							# 		#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
							# 		onmousehierarchyenter = "[GetVariableSystem.Set('patron_active', 'namira')]"
							# 		#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
							# 		onmousehierarchyleave = "[GetVariableSystem.Clear('patron_active')]"

							# 		button_patron_entry = {
							# 			#datacontext = "[GetScriptedGui('patron_namira_shown')]"
							# 			#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 			#down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'namira' ) )]"

							# 			blockoverride "patron_entry_icon" {
							# 				texture = "gfx/interface/patrons/patron_namira.dds"
							# 			}
							# 			blockoverride "patron_entry_name" {
							# 				text = patron_namira_name
							# 			}
							# 			blockoverride "patron_entry_desc" {
							# 				text = patron_namira_long_desc
							# 			}
							# 			blockoverride "patron_summary_desc" {
							# 				text = patron_namira_summary
							# 			}
							# 			blockoverride "patron_visible_unhover" {
							# 				visible = "[Not(GetVariableSystem.HasValue('patron_active', 'namira'))]"
							# 			}
							# 			blockoverride "patron_visible_hover" {
							# 				visible = "[GetVariableSystem.HasValue('patron_active', 'namira')]"
							# 			}
							# 		}
							# 	}

							# 	# Nocturnal #
							# 	vbox = {
							# 		name = "patron_nocturnal"
							# 		datacontext = "[GetScriptedGui('patron_nocturnal_shown')]"
							# 		datacontext = "[GuiScope.SetRoot(MakeScopeFlag('nocturnal')).GetRootScope]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

							# 		#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
							# 		onmousehierarchyenter = "[GetVariableSystem.Set('patron_active', 'nocturnal')]"
							# 		#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
							# 		onmousehierarchyleave = "[GetVariableSystem.Clear('patron_active')]"

							# 		button_patron_entry = {
							# 			#datacontext = "[GetScriptedGui('patron_nocturnal_shown')]"
							# 			#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 			#down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'nocturnal' ) )]"

							# 			blockoverride "patron_entry_icon" {
							# 				texture = "gfx/interface/patrons/patron_nocturnal.dds"
							# 			}
							# 			blockoverride "patron_entry_name" {
							# 				text = patron_nocturnal_name
							# 			}
							# 			blockoverride "patron_entry_desc" {
							# 				text = patron_nocturnal_long_desc
							# 			}
							# 			blockoverride "patron_summary_desc" {
							# 				text = patron_nocturnal_summary
							# 			}
							# 			blockoverride "patron_visible_unhover" {
							# 				visible = "[Not(GetVariableSystem.HasValue('patron_active', 'nocturnal'))]"
							# 			}
							# 			blockoverride "patron_visible_hover" {
							# 				visible = "[GetVariableSystem.HasValue('patron_active', 'nocturnal')]"
							# 			}
							# 		}
							# 	}

							# 	# Peryite #
							# 	vbox = {
							# 		name = "patron_peryite"
							# 		datacontext = "[GetScriptedGui('patron_peryite_shown')]"
							# 		datacontext = "[GuiScope.SetRoot(MakeScopeFlag('peryite')).GetRootScope]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

							# 		#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
							# 		onmousehierarchyenter = "[GetVariableSystem.Set('patron_active', 'peryite')]"
							# 		#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
							# 		onmousehierarchyleave = "[GetVariableSystem.Clear('patron_active')]"

							# 		button_patron_entry = {
							# 			#datacontext = "[GetScriptedGui('patron_peryite_shown')]"
							# 			#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 			#down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'peryite' ) )]"

							# 			blockoverride "patron_entry_icon" {
							# 				texture = "gfx/interface/patrons/patron_peryite.dds"
							# 			}
							# 			blockoverride "patron_entry_name" {
							# 				text = patron_peryite_name
							# 			}
							# 			blockoverride "patron_entry_desc" {
							# 				text = patron_peryite_long_desc
							# 			}
							# 			blockoverride "patron_summary_desc" {
							# 				text = patron_peryite_summary
							# 			}
							# 			blockoverride "patron_visible_unhover" {
							# 				visible = "[Not(GetVariableSystem.HasValue('patron_active', 'peryite'))]"
							# 			}
							# 			blockoverride "patron_visible_hover" {
							# 				visible = "[GetVariableSystem.HasValue('patron_active', 'peryite')]"
							# 			}
							# 		}
							# 	}

							# 	# Sanguine #
							# 	vbox = {
							# 		name = "patron_sanguine"
							# 		datacontext = "[GetScriptedGui('patron_sanguine_shown')]"
							# 		datacontext = "[GuiScope.SetRoot(MakeScopeFlag('sanguine')).GetRootScope]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

							# 		#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
							# 		onmousehierarchyenter = "[GetVariableSystem.Set('patron_active', 'sanguine')]"
							# 		#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
							# 		onmousehierarchyleave = "[GetVariableSystem.Clear('patron_active')]"

							# 		button_patron_entry = {
							# 			#datacontext = "[GetScriptedGui('patron_sanguine_shown')]"
							# 			#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 			#down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'sanguine' ) )]"

							# 			blockoverride "patron_entry_icon" {
							# 				texture = "gfx/interface/patrons/patron_sanguine.dds"
							# 			}
							# 			blockoverride "patron_entry_name" {
							# 				text = patron_sanguine_name
							# 			}
							# 			blockoverride "patron_entry_desc" {
							# 				text = patron_sanguine_long_desc
							# 			}
							# 			blockoverride "patron_summary_desc" {
							# 				text = patron_sanguine_summary
							# 			}
							# 			blockoverride "patron_visible_unhover" {
							# 				visible = "[Not(GetVariableSystem.HasValue('patron_active', 'sanguine'))]"
							# 			}
							# 			blockoverride "patron_visible_hover" {
							# 				visible = "[GetVariableSystem.HasValue('patron_active', 'sanguine')]"
							# 			}
							# 		}
							# 	}

							# 	# Sheogorath #
							# 	vbox = {
							# 		name = "patron_sheogorath"
							# 		datacontext = "[GetScriptedGui('patron_sheogorath_shown')]"
							# 		datacontext = "[GuiScope.SetRoot(MakeScopeFlag('sheogorath')).GetRootScope]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

							# 		#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
							# 		onmousehierarchyenter = "[GetVariableSystem.Set('patron_active', 'sheogorath')]"
							# 		#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
							# 		onmousehierarchyleave = "[GetVariableSystem.Clear('patron_active')]"

							# 		button_patron_entry = {
							# 			#datacontext = "[GetScriptedGui('patron_sheogorath_shown')]"
							# 			#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 			#down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'sheogorath' ) )]"

							# 			blockoverride "patron_entry_icon" {
							# 				texture = "gfx/interface/patrons/patron_sheogorath.dds"
							# 			}
							# 			blockoverride "patron_entry_name" {
							# 				text = patron_sheogorath_name
							# 			}
							# 			blockoverride "patron_entry_desc" {
							# 				text = patron_sheogorath_long_desc
							# 			}
							# 			blockoverride "patron_summary_desc" {
							# 				text = patron_sheogorath_summary
							# 			}
							# 			blockoverride "patron_visible_unhover" {
							# 				visible = "[Not(GetVariableSystem.HasValue('patron_active', 'sheogorath'))]"
							# 			}
							# 			blockoverride "patron_visible_hover" {
							# 				visible = "[GetVariableSystem.HasValue('patron_active', 'sheogorath')]"
							# 			}
							# 		}
							# 	}

							# 	# Vaermina #
							# 	vbox = {
							# 		name = "patron_vaermina"
							# 		datacontext = "[GetScriptedGui('patron_vaermina_shown')]"
							# 		datacontext = "[GuiScope.SetRoot(MakeScopeFlag('vaermina')).GetRootScope]"
							# 		visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

							# 		#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
							# 		onmousehierarchyenter = "[GetVariableSystem.Set('patron_active', 'vaermina')]"
							# 		#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
							# 		onmousehierarchyleave = "[GetVariableSystem.Clear('patron_active')]"

							# 		button_patron_entry = {
							# 			#datacontext = "[GetScriptedGui('patron_vaermina_shown')]"
							# 			#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							# 			#down = "[And( GetPlayer.MakeScope.Var('patron_shown').IsSet, EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, 'vaermina' ) )]"

							# 			blockoverride "patron_entry_icon" {
							# 				texture = "gfx/interface/patrons/patron_vaermina.dds"
							# 			}
							# 			blockoverride "patron_entry_name" {
							# 				text = patron_vaermina_name
							# 			}
							# 			blockoverride "patron_entry_desc" {
							# 				text = patron_vaermina_long_desc
							# 			}
							# 			blockoverride "patron_summary_desc" {
							# 				text = patron_vaermina_summary
							# 			}
							# 			blockoverride "patron_visible_unhover" {
							# 				visible = "[Not(GetVariableSystem.HasValue('patron_active', 'vaermina'))]"
							# 			}
							# 			blockoverride "patron_visible_hover" {
							# 				visible = "[GetVariableSystem.HasValue('patron_active', 'vaermina')]"
							# 			}
							# 		}
							# 	}
							# }
						}
					}
				}

				#Interaction Tab
				vbox = {
					name = "patron_interaction_tab"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					spacing = 15
					#datacontext = "[GetScriptedGui('patron_interaction_tab_toggle')]"
					#visible = "[ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					visible = "[GetVariableSystem.Exists('patron_active')]"

					vbox = {
						#maximumsize = { 600 400 }
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = growing
						margin = { 5 15 }
						margin_top = 0

						background = {
							using = Background_Area
						}

						widget = {
							size = { 0 150 }
							layoutpolicy_horizontal = expanding
							button_back = {
								name = "patron_button_back"
								parentanchor = vcenter|left
								position = { 20 0 }
								shortcut = "go_back"
								#clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_close"

								using = Animation_ShowHide_Standard

								#datacontext = "[GetScriptedGui('patron_selection_tab_toggle')]" #need close desision detail view
								#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								onclick = "[GetVariableSystem.Clear('patron_active')]"
								onclick = "[GetScriptedGui('patron_on_select').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								onclick = "[PdxGuiWidget.TriggerAnimation( Select_CString( IsGameViewOpen('decision_detail'), 'decision_detail_close', '' ) )]"

								tooltip = patron_back_tt

								state = {
									name = "decision_detail_close"

									on_start = "[ToggleGameView('decision_detail')]"
								}
							}
							widget = {
								size = { 140 100 }
								parentanchor = vcenter|left
								position = { 60 0 }
								vbox = {
									text_single = {
										text = patron_status #defined by custom loc
										align = center
										fontsize = 16
									}
									text_single = {
										text = patron_worship_type #defined by custom loc
										align = center
										fontsize = 16
									}
								}
							}
							# Patron Icons #
							widget = {
								size = { 150 150 }
								visible = "[GetPlayer.MakeScope.Var('patron_shown').IsSet]"
								parentanchor = center

								#Azura
								button_patron_icon = {
									#visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('azura') )]"
									visible = "[GetVariableSystem.HasValue('patron_active', '_azura')]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_azura.dds"
									}
								}

								#Boethiah
								button_patron_icon = {
									#visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('boethiah') )]"
									visible = "[GetVariableSystem.HasValue('patron_active', '_boethiah')]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_boethiah.dds"
									}
								}

								#Clavicus Vile
								button_patron_icon = {
									#visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('clavicus') )]"
									visible = "[GetVariableSystem.HasValue('patron_active', '_clavicus')]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_clavicus.dds"
									}
								}

								#Hermaeus Mora
								button_patron_icon = {
									#visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('hermaeus') )]"
									visible = "[GetVariableSystem.HasValue('patron_active', '_hermaeus')]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_hermaeus.dds"
									}
								}

								#Hircine
								button_patron_icon = {
									#visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('hircine') )]"
									visible = "[GetVariableSystem.HasValue('patron_active', '_hircine')]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_hircine.dds"
									}
								}

								#Jyggalag
								button_patron_icon = {
									#visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('jyggalag') )]"
									visible = "[GetVariableSystem.HasValue('patron_active', '_jyggalag')]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_jyggalag.dds"
									}
								}

								#Malacath
								button_patron_icon = {
									#visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('malacath') )]"
									visible = "[GetVariableSystem.HasValue('patron_active', '_malacath')]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_malacath.dds"
									}
								}

								#Mehrunes Dagon
								button_patron_icon = {
									#visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('mehrunes') )]"
									visible = "[GetVariableSystem.HasValue('patron_active', '_mehrunes')]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_mehrunes.dds"
									}
								}

								#Mephala
								button_patron_icon = {
									#visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('mephala') )]"
									visible = "[GetVariableSystem.HasValue('patron_active', '_mephala')]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_mephala.dds"
									}
								}

								#Meridia
								button_patron_icon = {
									#visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('meridia') )]"
									visible = "[GetVariableSystem.HasValue('patron_active', '_meridia')]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_meridia.dds"
									}
								}

								#Molag Bal
								button_patron_icon = {
									#visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('molag') )]"
									visible = "[GetVariableSystem.HasValue('patron_active', '_molag')]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_molag.dds"
									}
								}

								#Namira
								button_patron_icon = {
									#visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('namira') )]"
									visible = "[GetVariableSystem.HasValue('patron_active', '_namira')]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_namira.dds"
									}
								}

								#Nocturnal
								button_patron_icon = {
									#visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('nocturnal') )]"
									visible = "[GetVariableSystem.HasValue('patron_active', '_nocturnal')]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_nocturnal.dds"
									}
								}

								#Peryite
								button_patron_icon = {
									#visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('peryite') )]"
									visible = "[GetVariableSystem.HasValue('patron_active', '_peryite')]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_peryite.dds"
									}
								}

								#Sanguine
								button_patron_icon = {
									#visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('sanguine') )]"
									visible = "[GetVariableSystem.HasValue('patron_active', '_sanguine')]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_sanguine.dds"
									}
								}

								#Sheogorath
								button_patron_icon = {
									#visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('sheogorath') )]"
									visible = "[GetVariableSystem.HasValue('patron_active', '_sheogorath')]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_sheogorath.dds"
									}
								}

								#Vaermina
								button_patron_icon = {
									#visible = "[EqualTo_string( GetPlayer.MakeScope.Var('patron_shown').GetFlagName, Localize('vaermina') )]"
									visible = "[GetVariableSystem.HasValue('patron_active', '_vaermina')]"

									blockoverride "patron_icon" {
										texture = "gfx/interface/patrons/patron_vaermina.dds"
									}
								}
							}
							widget = {
								size = { 170 100 } #+30 compared to other one for button
								parentanchor = vcenter|right
								position = { -30 0 }
								vbox = {
									text_single = {
										text = patron_ardor #defined by custom loc
										align = center
										fontsize = 16
									}
									widget = {
										name = "ardor_widget"
										size = { 170 58 }

										#tooltip = "patron_ardor"
										#using = tooltip_ne

										hbox = {
											size = { 100 20}
											maximumsize = { 100 20}
											parentanchor = top|left
											position = { 53 19 }

											background = {
												texture = "gfx/interface/colors/white.dds"
												color = { 0.1 0.1 0.1 0.8 }
											}

											#gets the progress bar part
											widget = {
												layoutpolicy_horizontal = expanding
												layoutpolicy_vertical = expanding
												layoutstretchfactor_horizontal = "[GetProgressBarValueMaxScaled( FixedPointToFloat(GetPlayer.MakeScope.Var(Concatenate('ardor', GetVariableSystem.Get('patron_active'))).GetValue), '(float)10000', '(int32)100' )]"

												progressbar_ardor = {
													#visible = "[GreaterThanOrEqualTo_int32(GetPlayer.GetStressLevel, '(int32)3')]"
													size = { 100% 100% }

													using = Animation_ShowHide_Standard

													blockoverride "bar_color"
													{
														texture = "gfx/interface/colors/red.dds"
													}

													blockoverride "bar_color_flow"
													{
														texture = "gfx/interface/colors/gold.dds"
														alpha = 0.7
													}
												}
											}
											#pushes the progress part to left
											widget = {
												layoutpolicy_horizontal = expanding
												layoutpolicy_vertical = expanding
												layoutstretchfactor_horizontal = "[GetProgressBarValueMaxOtherScaled( FixedPointToFloat(GetPlayer.MakeScope.Var(Concatenate('ardor', GetVariableSystem.Get('patron_active'))).GetValue), '(float)10000', '(int32)100' )]"
											}
										}

										icon = {
											size = { 100% 100% }
											texture = "gfx/interface/patron_window/ardor_bg.dds"

											icon = {
												parentanchor = vcenter
												position = { 19 2 }
												size = { 30 30 }

												texture = "gfx/interface/patron_window/icon_ardor.dds"
											}
										}
									}
								}
							}
						}

						divider_light = {
							layoutpolicy_horizontal = expanding
						}

						vbox = {
							layoutpolicy_horizontal = expanding

							text_single = {
								#text = selected_patron_name #defined by custom loc
								text = "[Localize(Concatenate(Concatenate('patron', GetVariableSystem.Get('patron_active')), '_name'))]"
								align = center
								fontsize = 32
							}
							hbox = {
								layoutpolicy_horizontal = expanding
								widget = {
									#parentanchor = vcenter
									allow_outside = yes
									button_expand = {
										parentanchor = bottom|hcenter
										position = { -220 0 }
										tooltip = "show_hide_desc"
										using = tooltip_nw
										onclick = "[GetVariableSystem.Toggle('patron_hide_desc')]"
										#down = "[Not(GetVariableSystem.Exists('patron_hide_desc'))]"

										frame = "[Select_int32( GetVariableSystem.Exists('patron_hide_desc'), '(int32)2', '(int32)1' )]"

										oversound = "event:/SFX/UI/Generic/sfx_ui_generic_icon_pointer_over"
										clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_icon_select"
									}
									text_multi = {
										resizeparent = yes
										#text = selected_patron_desc #defined by custom loc
										text = "[Localize(Concatenate(Concatenate('patron', GetVariableSystem.Get('patron_active')), '_desc'))]"
										size = { 450 150 }
										maximumsize = { 450 150 }
										align = center
										fontsize = 20
										autoresize = yes
									}
								}
							}
							vbox = {
								visible = "[GetVariableSystem.Exists('patron_hide_desc')]"
								spacer = {
									size = { 0 8 }
								}
								divider_light = {
									layoutpolicy_horizontal = expanding
								}
								spacer = {
									size = { 0 6 }
								}
								text_multi = {
									#text = selected_patron_long_desc #defined by custom loc
									text = "[Localize(Concatenate(Concatenate('patron', GetVariableSystem.Get('patron_active')), '_long_desc'))]"
									size = { 450 150 }
									maximumsize = { 450 150 }
									align = center
									fontsize = 16
									autoresize = yes
								}
							}
						}
					}

					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding

						margin_bottom = 15
						spacing = 15

						hbox = { #interaction lists, should be scrollbox somewhere. fire decisions
							name = "minor_interactions"
							#size = { 90% 250 }
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							margin = { 20 0 }
							spacing = 15

							vbox = {
								name = "minor_boons"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								#size = { 45% 250}
								minimumsize = { 0 250 }

								scrollbox = {
									name = "minor_boons_scrollarea"
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding

									background = {
										texture = "gfx/interface/colors/green.dds"
										spriteType = Corneredtiled
										spriteborder = { 1 1 }
										#margin = { -5 0 }
										#fittype = end
										alpha = 0.07 #offset for green brightness
										#framesize = { 260 400 }

										modify_texture = {
											blend_mode = alphamultiply
											mirror = vertical
											texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
										}
									}

									blockoverride "scrollbox_content"
									{
										name = "minor_boons_container"
										spacing = 20

										text_label_center = {
											text = "PATRON_MINOR_BOONS"
										}
										vbox = {
											name = "minor_boons"
											datamodel = "[DecisionsView.GetDecisions]"
											layoutpolicy_horizontal = expanding
											spacing = 10

											item = {
												button_patron_decision_entry = {
													datacontext = "[DecisionsViewItem.GetDecision]"
													visible = "[EqualTo_string( Localize(Concatenate( Decision.GetShortDescForPlayer, 'type' )), 'minor_boon' )]"
													#visible = "[EqualTo_string( Decision.GetShortDescForPlayer, Concatenate('minor_boon', GetVariableSystem.Get('patron_active')) )]"
												}
											}
										}
									}
								}
							}

							vbox = {
								name = "offerings"
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								#size = { 45% 250}
								minimumsize = { 0 250 }

								scrollbox = {
									name = "offerings_scrollarea"
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding

									background = {
										texture = "gfx/interface/colors/red.dds"
										spriteType = Corneredtiled
										spriteborder = { 1 1 }
										#margin = { -5 0 }
										#fittype = end
										alpha = 0.1
										#framesize = { 260 400 }

										modify_texture = {
											blend_mode = alphamultiply
											mirror = vertical
											texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
										}
									}

									blockoverride "scrollbox_content"
									{
										name = "offerings_container"
										spacing = 20

										text_label_center = {
											text = "PATRON_OFFERINGS"
										}
										vbox = {
											name = "offerings"
											datamodel = "[DecisionsView.GetDecisions]"
											layoutpolicy_horizontal = expanding
											spacing = 10

											item = {
												button_patron_decision_entry = {
													datacontext = "[DecisionsViewItem.GetDecision]"
													visible = "[EqualTo_string( Localize(Concatenate( Decision.GetShortDescForPlayer, 'type' )), 'offering' )]"
													#visible = "[EqualTo_string( Decision.GetShortDescForPlayer, Concatenate('offering', GetVariableSystem.Get('patron_active')) )]"
												}
											}
										}
									}
								}
							}
						}

						hbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							margin = { 20 0 }

							vbox = {
								name = "major_boons"
								#size = { 90% 150}
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								minimumsize = { 0 150 }

								scrollbox = {
									name = "major_boons_scrollarea"
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding

									background = {
										texture = "gfx/interface/colors/blue.dds"
										spriteType = Corneredtiled
										spriteborder = { 1 1 }
										#margin = { -5 0 }
										#fittype = end
										alpha = 0.4
										#framesize = { 260 400 }

										modify_texture = {
											blend_mode = alphamultiply
											mirror = vertical
											texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
										}
										modify_texture = {
											texture = "gfx/interface/component_masks/mask_fade_halfcircle.dds"
											rotate_uv = 3
											blend_mode = alphamultiply
										}
									}

									blockoverride "scrollbox_content"
									{
										name = "major_boons_container"
										spacing = 20

										text_label_center = {
											text = "PATRON_MAJOR_BOONS"
										}
										vbox = {
											name = "major_boons"
											datamodel = "[DecisionsView.GetDecisions]"
											layoutpolicy_horizontal = expanding
											spacing = 10

											item = {
												button_patron_major_decision_entry = {
													datacontext = "[DecisionsViewItem.GetDecision]"
													visible = "[EqualTo_string( Localize(Concatenate( Decision.GetShortDescForPlayer, 'type' )), 'major_boon' )]"
													#visible = "[EqualTo_string( Decision.GetShortDescForPlayer, Concatenate('major_boon', GetVariableSystem.Get('patron_active')) )]"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}

	margin_widget = {
		name = "council_of_the_eight_window"
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 20

		visible = "[GetVariableSystem.HasValue( 'decision_tab', 'council_of_the_eight' )]"
		datacontext = "[GetGlobalVariable('story_cycle_coe_global')]"

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			using = Sound_WindowShow_Standard
			using = Window_Position_MainTab
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			using = Sound_WindowHide_Standard
			using = Window_Position_MainTab_Hide
		}

		widget = {
			size = { 100% 100% }

			vbox = {
				using = Window_Margins

				# Header picture
				header_with_picture = {
					layoutpolicy_horizontal = expanding

					blockoverride "header_text"
					{
						text = "COUNCIL_OF_THE_EIGHT_VIEW_TITLE"
					}

					blockoverride "button_close"
					{
						onclick = "[GetVariableSystem.Clear( 'decision_tab' )]"
						onclick = "[DecisionsView.Close]"
					}

					blockoverride "illustration_texture"
					{
						texture = "gfx/interface/patron_window/header_council_of_the_eight.dds"
					}
				}

				# Switch between tabs
				hbox = {
					layoutpolicy_horizontal = expanding
					name = "tabs"

					button_tab = {
						layoutpolicy_horizontal = expanding
						onclick = "[GetVariableSystem.Set( 'council_of_the_eight_view_tabs', 'members' )]"
						down = "[GetVariableSystem.HasValue( 'council_of_the_eight_view_tabs', 'members' )]"
						text = "COUNCIL_OF_THE_EIGHT_MEMBERS"
						default_format = "#low"

						using = tooltip_below
					}

					button_tab = {
						layoutpolicy_horizontal = expanding
						onclick = "[GetVariableSystem.Set( 'council_of_the_eight_view_tabs', 'doctrines' )]"
						down = "[GetVariableSystem.HasValue( 'council_of_the_eight_view_tabs', 'doctrines' )]"
						text = "COUNCIL_OF_THE_EIGHT_DOCTRINES"
						default_format = "#low"

						using = tooltip_below
					}
				}

				## Members tab
				vbox = {
					name = "coe_tab_members"
					visible = "[GetVariableSystem.HasValue( 'council_of_the_eight_view_tabs', 'members' )]"

					minimumsize = { 0 800 }
					maximumsize = { 0 800 }

					# Leader
					vbox = {
						name = "council_of_the_eight_leader_tab"
						# datacontext = "[GetGlobalVariable('story_cycle_coe_global').Story.MakeScope]"
						# datacontext = "[GetGlobalVariable('leader_council_eight')]" # Get the CoE faith? It's a global variable
						minimumsize = { 0 300 }
						maximumsize = { 0 300 }

						hbox = {
							block "background" {
								background = {
									using = Background_Area_Dark
									margin = { 1 1 }
									alpha = 0.6
								}
							}
							margin = { 20 10 }
							text_single = {
								multiline = yes
								font = TitleFont
								using = Font_Size_Big
								align = center
								text = "COUNCIL_OF_THE_EIGHT_LEADER_TITLE"
							}
						}

						hbox = {
							highlight_icon = {
								name = "faith_button"
								size = { 30 30 }
								texture = "[GetGlobalVariable('story_cycle_coe_global').Story.MakeScope.Var('coe_leader_faith').Faith.GetIcon]"
							}

							text_multi = {
								name = "COUNCIL_OF_THE_EIGHT_LEADER_NAME"
								autoresize = yes
								text = COUNCIL_OF_THE_EIGHT_LEADER_NAME
								align = center
								fontsize_min = 12
								max_width = 850
							}
						}

						divider_light = {
							layoutpolicy_horizontal = expanding
						}

						hbox = {
							layoutpolicy_horizontal = expanding

							vbox = {
								text_single = {
									text = "COUNCIL_OF_THE_EIGHT_LEADER_FERVOR_TITLE"
									align = center
									fontsize = 20
								}

								hbox = {
									text_single = {
										text = "COUNCIL_OF_THE_EIGHT_LEADER_FERVOR_VALUE"
										align = center
										fontsize = 20
									}

									icon = {
										texture = "gfx/interface/icons/icon_trend_arrow.dds"
										framesize = { 22 22 }
										frame = "[Select_int32( GreaterThanOrEqualTo_CFixedPoint( Faith.GetYearlyFervorChange, '(CFixedPoint)0' ), '(int32)1', '(int32)2' )]"
									}
								}
							}

							spacer = {
								size = { 20 0 }
							}

							divider_light = {
								layoutpolicy_vertical = expanding
							}

							spacer = {
								size = { 20 0 }
							}

							vbox = {
								text_single = {
									text = "COUNCIL_OF_THE_EIGHT_LEADER_SIZE_TITLE"
									align = center
									fontsize = 20
								}
								text_single = {
									text = "COUNCIL_OF_THE_EIGHT_LEADER_SIZE_VALUE"
									align = center
									fontsize = 20
								}
							}
						}

						background = {
							margin_left = 80
							margin_right = 80
							margin_top = 10
							margin_bottom = 10

							texture = "gfx/interface/component_tiles/tile_dark_area_01.dds"
							spriteType = Corneredstretched
							spriteborder = { 40 8 }

							modify_texture = {
								name = "mask"
								texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
								spriteType = Corneredstretched
								spriteborder = { 0 0 }
								blend_mode = alphamultiply
							}
							modify_texture = {
								name = "mask"
								texture = "gfx/interface/component_masks/mask_legacy_track.dds"
								spriteType = Corneredstretched
								spriteborder = { 0 0 }
								blend_mode = alphamultiply
							}
						}
					}

					vbox = {
						# visible = "[Not(IsDataModelEmpty(Story.GetList('list_coe_chapels')))]"
						# visible = "[IsDataModelEmpty(Story.GetList('list_coe_chapels'))]"
						# datamodel = "[GetStory.MakeScope.GetList('list_coe_chapels')]"
						# datamodel = "[Story.GetList('list_coe_chapels')]"
						name = "council_of_the_eight_members_tab"
						minimumsize = { 0 500 }
						maximumsize = { 0 500 }

						margin_top = 15

						hbox = {
							block "background" {
								background = {
									using = Background_Area_Dark
									margin = { 1 1 }
									alpha = 0.6
								}
							}
							margin = { 20 10 }
							text_single = {
								multiline = yes
								font = TitleFont
								using = Font_Size_Big
								align = center
								text = "COUNCIL_OF_THE_EIGHT_MEMBERS_TITLE"
							}
						}

						vbox = {
							layoutpolicy_vertical = expanding
							layoutpolicy_horizontal = expanding
							margin_top = 20

							fixedgridbox = {
								datamodel = "[GetGlobalList('coe_chapels_list')]"
								name = "coe_chapels_list"
								flipdirection = yes
								addcolumn = 250
								addrow = 90
								datamodel_wrap = 2

								item = {
									flowcontainer = {
										datacontext = "[Scope.Story]"

										vbox = {
											size = { 230 65 }
											block "background" {
												background = {
													using = Background_Area
													margin = { 0 7 }
												}
											}
											layoutpolicy_horizontal = expanding

											hbox = {
												icon = {
													texture = "gfx/interface/coat_of_arms/crown_strip_44.dds"
													framesize = { 28 20 }
													frame = "[Select_int32( Scope.Story.MakeScope.Var('chapel_faith').Faith.HasDoctrineByKey( 'special_faith_group_council_of_the_eight_leader' ), '(int32)6', '(int32)5' )]"
												}

												text_single = {
													name = "coe_chapel_title"
													text = "COE_CHAPEL_TITLE"
												}
											}

											hbox = {
												highlight_icon = {
													name = "faith_button"
													size = { 24 24 }
													texture = "[Scope.Story.MakeScope.Var('chapel_faith').Faith.GetIcon]"
												}

												text_single = {
													name = "coe_chapel_faith"
													text = "[Scope.Story.MakeScope.Var('chapel_faith').Faith.GetAdjective]" #EK2_RUS заменил прилагательное конфессии на название
												}
											}

											hbox = {
												text_single = {
													name = "coe_chapel_fervor"
													text = "GET_CHAPEL_FERVOR"
												}

												spacer = {
													size = { 20 0 }
												}

												text_single = {
													name = "coe_chapel_land_held_share"
													text = "GET_CHAPEL_LAND_SHARE"
												}
											}
										}
									}
								}
							}

							expand = {}

							text_multi = {
								text = "COE_ADDING_NEW_CHAPELS"
								align = center
								fontsize = 15
								maximumsize = { 450 150 }
								autoresize = yes
							}
						}

						background = {
							margin_left = 80
							margin_right = 80
							margin_top = 10
							margin_bottom = 10

							texture = "gfx/interface/component_tiles/tile_dark_area_02.dds"
							spriteType = Corneredstretched
							spriteborder = { 40 8 }

							modify_texture = {
								name = "mask"
								texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
								spriteType = Corneredstretched
								spriteborder = { 0 0 }
								blend_mode = alphamultiply
							}
							modify_texture = {
								name = "mask"
								texture = "gfx/interface/component_masks/mask_legacy_track.dds"
								spriteType = Corneredstretched
								spriteborder = { 0 0 }
								blend_mode = alphamultiply
							}
						}
					}
				}

				# Doctrines tab
				vbox = {
					name = "coe_tab_doctrines"
					visible = "[GetVariableSystem.HasValue( 'council_of_the_eight_view_tabs', 'doctrines' )]"

					minimumsize = { 0 800 }
					maximumsize = { 0 800 }

					### Two types of doctrines:
					# * Organisation (who leads, what each member can do, ...)
					# * Beliefs (syncretism, hostility, status of Lorkhan, ...)
					vbox = {
						layoutpolicy_horizontal = expanding

						vbox = {
							text_label_left = {
								layoutpolicy_horizontal = expanding
								align = left
								text = "COUNCIL_OF_THE_EIGHT_DOCTRINES_ORGANISATION"
							}

							spacer = {
								size = { 0 20 }
							}

							fixedgridbox = {
								datamodel = "[GetGlobalVariable('story_cycle_coe_global').Story.MakeScope.GetList('list_coe_doctrine_organisation')]"

								flipdirection = yes
								addcolumn = 250
								addrow = 90
								datamodel_wrap = 2

								item = {
									flowcontainer = {
										vbox = {
											size = { 230 65 }
											block "background" {
												background = {
													using = Background_Area
													margin = { 10 7 }
												}
											}
											layoutpolicy_horizontal = expanding

											vbox = {
												layoutpolicy_horizontal = expanding
												text_single = {
													align = left
													text = "[Localize(Scope.Story.MakeScope.Var('coe_doctrine_name').GetFlagName)]"
												}
												text_single = {
													text = "[Localize( Concatenate(Scope.Story.MakeScope.Var('coe_doctrine_value').GetFlagName, '_name') )]"
												}
												tooltip = "[Localize( Concatenate(Scope.Story.MakeScope.Var('coe_doctrine_value').GetFlagName, '_tooltip') )]"
											}
										}
									}
								}
							}
						}

						vbox = {
							text_label_left = {
								layoutpolicy_horizontal = expanding
								align = left
								text = "COUNCIL_OF_THE_EIGHT_DOCTRINES_BELIEFS"
							}

							spacer = {
								size = { 0 20 }
							}

							fixedgridbox = {
								datamodel = "[GetGlobalVariable('story_cycle_coe_global').Story.MakeScope.GetList('list_coe_doctrine_beliefs')]"

								flipdirection = yes
								addcolumn = 250
								addrow = 90
								datamodel_wrap = 2

								item = {
									flowcontainer = {
										vbox = {
											size = { 230 65 }
											block "background" {
												background = {
													using = Background_Area
													margin = { 10 7 }
												}
											}
											layoutpolicy_horizontal = expanding

											vbox = {
												layoutpolicy_horizontal = expanding
												text_single = {
													align = left
													text = "[Localize(Scope.Story.MakeScope.Var('coe_doctrine_name').GetFlagName)]"
												}
												text_single = {
													text = "[Localize( Concatenate(Scope.Story.MakeScope.Var('coe_doctrine_value').GetFlagName, '_name') )]"
												}
												tooltip = "[Localize( Concatenate(Scope.Story.MakeScope.Var('coe_doctrine_value').GetFlagName, '_tooltip') )]"
											}
										}
									}
								}
							}
						}
					}

					expand = {}
				}
			}
		}
	}
}

types Decisions
{
	type button_decision_entry = button_standard {
		size = { 300 45 }
		tooltip = SHOW_DECISION_TOOLTIP

		highlight_icon = {
			name = "icon"
			position = { 5 5 }
			size = { 40 40 }
			texture = "[Decision.GetIcon]"
			visible = no
		}

		widget = {
			scissor = yes
			parentanchor = right|top

			block "size_illustration" {
				size = { 250 43 }
			}

			icon = {
				name = "illustration"
				parentanchor = right|top
				size = { 250 100 }

				mirror = horizontal
				texture = "[Decision.GetPicture]"
				alpha = 0.7

				visible = "[Decision.IsPossibleForPlayer]"

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}

			highlight_icon = {
				parentanchor = right|top
				size = { 250 100 }

				mirror = horizontal
				texture = "[Decision.GetPicture]"
				alpha = 0.7

				visible = "[Not(Decision.IsPossibleForPlayer)]"

				effectname = "GreyedOut"

				tintcolor = { 0.6 0.6 0.6 0.7 }

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}
		}

		hbox = {
			margin = { 20 0 }
			margin_right = 10

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title"
				text = "[Decision.GetTitleForPlayer]"
				visible = "[Decision.IsPossibleForPlayer]"
				default_format = "#clickable"
				align = nobaseline
			}

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title2"
				text = "[Decision.GetTitleForPlayer]"
				visible = "[Not(Decision.IsPossibleForPlayer)]"
				block "default_format" {
					default_format = "#low"
				}
				align = nobaseline
			}

			highlight_icon = {
				size = { 30 30 }
				name = "not_possible"
				texture = "gfx/interface/icons/symbols/icon_cross.dds"
				visible = "[Not(Decision.IsPossibleForPlayer)]"
			}
		}
	}
}

types Court
{
	type button_court = button_standard {
		size = { 300 45 }
		tooltip = SHOW_DECISION_TOOLTIP

		highlight_icon = {
			name = "icon"
			position = { 5 5 }
			size = { 40 40 }
			texture = "[Decision.GetIcon]"
			visible = no
		}

		widget = {
			scissor = yes
			parentanchor = right|top

			block "size_illustration" {
				size = { 250 43 }
			}

			icon = {
				name = "illustration"
				parentanchor = right|top
				size = { 250 100 }

				mirror = horizontal
				texture = "[Decision.GetPicture]"
				alpha = 0.7

				visible = "[Decision.IsPossibleForPlayer]"

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
					blend_mode = alphamultiply
					alpha = 1
					mirror = horizontal

				}

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
					blend_mode = alphamultiply
					alpha = 0.5
					mirror = horizontal

				}
			}

			highlight_icon = {
				parentanchor = right|top
				size = { 250 100 }

				mirror = horizontal
				texture = "[Decision.GetPicture]"
				alpha = 0.7

				visible = "[Not(Decision.IsPossibleForPlayer)]"

				effectname = "GreyedOut"

				tintcolor = { 0.6 0.6 0.6 0.7 }

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}
		}

		hbox = {
			margin = { 20 0 }
			margin_right = 10

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title"
				text = "[Decision.GetTitleForPlayer]"
				visible = "[Decision.IsPossibleForPlayer]"
				default_format = "#clickable"
				align = nobaseline
			}

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title2"
				text = "[Decision.GetTitleForPlayer]"
				visible = "[Not(Decision.IsPossibleForPlayer)]"
				block "default_format" {
					default_format = "#low"
				}
				align = nobaseline
			}

			highlight_icon = {
				size = { 30 30 }
				name = "not_possible"
				texture = "gfx/interface/icons/symbols/icon_cross.dds"
				visible = "[Not(Decision.IsPossibleForPlayer)]"
			}
		}
	}
}
Types Patrons
{
	Type button_patron_icon = button {
		size = { 150 150 }
		alwaystransparent = yes

		# background = {
		# 	texture = "gfx/interface/colors/red.dds"
		# 	spriteType = Corneredtiled
		# 	spriteborder = { 6 6 }
		# 	shaderfile = "gfx/FX/pdxgui_default.shader"
		# 	alpha = 0.5
		# 	modify_texture = {
		# 		name = "mask_1"
		# 		texture = "gfx/interface/component_masks/mask_glow.dds"
		# 		blend_mode = alphamultiply
		# 		rotate_uv = 1
		# 	}
		# 	modify_texture = {
		# 		name = "mask_2"
		# 		texture = "gfx/interface/component_masks/mask_fade_circle.dds"
		# 		blend_mode = alphamultiply
		# 		rotate_uv = 1
		# 	}
		# }
		icon = {
			block "patron_icon" {
				texture = "gfx/interface/patrons/patron_daedra.dds"
			}
			size = { 128 128 }
			parentanchor = center
		}
	}

	Type button_patron_entry = button_standard {
		size = { 500 100 }
		maximumsize = { 500 100 }

		#onmousehierarchyenter = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_enter_nc' ))]"
		onmousehierarchyenter = "[GetVariableSystem.Set('patron_mouse', ValueBreakdown.GetName)]"
		#onmousehierarchyleave = "[PdxGuiWidget.TriggerAnimation(Select_CString( GetVariableSystem.HasValue('patron_trait', 'all'),'', 'mouse_leave_nc' ))]"
		onmousehierarchyleave = "[GetVariableSystem.Clear('patron_mouse')]"

		#visible = "[Not(GetVariableSystem.HasValue('patron_active', 'azura'))]"

		hbox = {
			spacing = 9
			margin_right = 9

			widget = {
				size = { 100 100 }
				#alwaystransparent = yes
				# background = {
				# 	texture = "gfx/interface/component_tiles/tile_selected.dds"
				# 	spriteType = Corneredtiled
				# 	spriteborder = { 6 6 }
				# 	shaderfile = "gfx/FX/pdxgui_default.shader"
				# }
				highlight_icon = {
					texture = "gfx/interface/component_tiles/tile_selected.dds"
					size = { 100% 100% }
				}
				# highlight_icon = {
				# 	block "patron_entry_icon" {
				# 		texture = "gfx/interface/patrons/patron_azura.dds"
				# 	}
				# 	size = { 84 84 }
				# 	parentanchor = center
				# }
				highlight_icon = {
					visible = "[EqualTo_string( ValueBreakdown.GetName, '_azura')]"
					texture = "gfx/interface/patrons/patron_azura.dds"
					size = { 84 84 }
					parentanchor = center
				}
				highlight_icon = {
					visible = "[EqualTo_string( ValueBreakdown.GetName, '_boethiah')]"
					texture = "gfx/interface/patrons/patron_boethiah.dds"
					size = { 84 84 }
					parentanchor = center
				}
				highlight_icon = {
					visible = "[EqualTo_string( ValueBreakdown.GetName, '_clavicus')]"
					texture = "gfx/interface/patrons/patron_clavicus.dds"
					size = { 84 84 }
					parentanchor = center
				}
				highlight_icon = {
					visible = "[EqualTo_string( ValueBreakdown.GetName, '_hermaeus')]"
					texture = "gfx/interface/patrons/patron_hermaeus.dds"
					size = { 84 84 }
					parentanchor = center
				}
				highlight_icon = {
					visible = "[EqualTo_string( ValueBreakdown.GetName, '_hircine')]"
					texture = "gfx/interface/patrons/patron_hircine.dds"
					size = { 84 84 }
					parentanchor = center
				}
				highlight_icon = {
					visible = "[EqualTo_string( ValueBreakdown.GetName, '_malacath')]"
					texture = "gfx/interface/patrons/patron_malacath.dds"
					size = { 84 84 }
					parentanchor = center
				}
				highlight_icon = {
					visible = "[EqualTo_string( ValueBreakdown.GetName, '_mehrunes')]"
					texture = "gfx/interface/patrons/patron_mehrunes.dds"
					size = { 84 84 }
					parentanchor = center
				}
				highlight_icon = {
					visible = "[EqualTo_string( ValueBreakdown.GetName, '_mephala')]"
					texture = "gfx/interface/patrons/patron_mephala.dds"
					size = { 84 84 }
					parentanchor = center
				}
				highlight_icon = {
					visible = "[EqualTo_string( ValueBreakdown.GetName, '_meridia')]"
					texture = "gfx/interface/patrons/patron_meridia.dds"
					size = { 84 84 }
					parentanchor = center
				}
				highlight_icon = {
					visible = "[EqualTo_string( ValueBreakdown.GetName, '_molag')]"
					texture = "gfx/interface/patrons/patron_molag.dds"
					size = { 84 84 }
					parentanchor = center
				}
				highlight_icon = {
					visible = "[EqualTo_string( ValueBreakdown.GetName, '_namira')]"
					texture = "gfx/interface/patrons/patron_namira.dds"
					size = { 84 84 }
					parentanchor = center
				}
				highlight_icon = {
					visible = "[EqualTo_string( ValueBreakdown.GetName, '_nocturnal')]"
					texture = "gfx/interface/patrons/patron_nocturnal.dds"
					size = { 84 84 }
					parentanchor = center
				}
				highlight_icon = {
					visible = "[EqualTo_string( ValueBreakdown.GetName, '_peryite')]"
					texture = "gfx/interface/patrons/patron_peryite.dds"
					size = { 84 84 }
					parentanchor = center
				}
				highlight_icon = {
					visible = "[EqualTo_string( ValueBreakdown.GetName, '_sanguine')]"
					texture = "gfx/interface/patrons/patron_sanguine.dds"
					size = { 84 84 }
					parentanchor = center
				}
				highlight_icon = {
					visible = "[EqualTo_string( ValueBreakdown.GetName, '_sheogorath')]"
					texture = "gfx/interface/patrons/patron_sheogorath.dds"
					size = { 84 84 }
					parentanchor = center
				}
				highlight_icon = {
					visible = "[EqualTo_string( ValueBreakdown.GetName, '_vaermina')]"
					texture = "gfx/interface/patrons/patron_vaermina.dds"
					size = { 84 84 }
					parentanchor = center
				}
				icon = {
					texture = "gfx/interface/component_tiles/tile_dark_area_02.dds"
					position = { 100 2 }
					size = { 396 96 }
					alwaystransparent = yes
					layer = bottom
					alpha = 0.7
					modify_texture = {
						name = "mask_1"
						texture = "gfx/interface/component_masks/mask_culture_era_tab.dds"
						blend_mode = alphamultiply
						rotate_uv = 0
					}
				}
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				spacing = 7
				margin = { 0 4 }
				hbox = {
					layoutpolicy_horizontal = expanding
					textbox = {
						font = StandardGameFont
						fontcolor = { 1 1 1 1 }
						fontsize = 16
						#block "patron_entry_name" {
						text = "[Localize(Concatenate(Concatenate('patron', ValueBreakdown.GetName), '_name'))]" #patron_azura_name
						#}
						autoresize = no
						layoutpolicy_horizontal = expanding
						elide = right
						minimumsize = { -1 16 }
						align = left
					}
				}
				textbox = {
					#block "patron_visible_unhover" {
					#visible = "[Not(GetVariableSystem.HasValue('patron_active', 'azura'))]"
					visible = "[Not(GetVariableSystem.HasValue('patron_mouse', ValueBreakdown.GetName))]"
					#}
					font = StandardGameFont
					fontcolor = { 0.8 0.8 0.8 1 }
					fontsize = 12
					#block "patron_entry_desc" {
					text = "[Localize(Concatenate(Concatenate('patron', ValueBreakdown.GetName), '_long_desc'))]" #patron_azura_long_desc
					#}
					autoresize = no
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					elide = right
					multiline = yes
					align = top|left
				}
				textbox = {
					#block "patron_visible_hover" {
					#visible = "[GetVariableSystem.HasValue('patron_active', 'azura')]"
					visible = "[GetVariableSystem.HasValue('patron_mouse', ValueBreakdown.GetName)]"
					#}
					font = StandardGameFont
					fontcolor = { 0.8 0.8 0.8 1 }
					fontsize = 14
					#block "patron_summary_desc" {
					text = "[Localize(Concatenate(Concatenate('patron', ValueBreakdown.GetName), '_summary'))]" #patron_azura_summary
					#}
					autoresize = no
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					elide = right
					multiline = yes
					align = top|left
				}
			}
			button = {
				size = { 100 100 }

				#block "patron_visible_hover" {
				#visible = "[GetVariableSystem.HasValue('patron_active', 'azura')]"
				visible = "[GetVariableSystem.HasValue('patron_mouse', ValueBreakdown.GetName)]"
				#}

				#onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				#onclick = "[GetScriptedGui('patron_interaction_tab_toggle').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

				onclick = "[GetVariableSystem.Set('patron_active', ValueBreakdown.GetName)]"
				onclick = "[GetScriptedGui('patron_on_select').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('patron', MakeScopeFlag(ValueBreakdown.GetName)).End)]"

				tooltip = patron_commune_tt

				highlight_icon = {
					texture = "gfx/interface/icons/flat_icons/go_to_my_location.dds"
					size = { 60 60 }
					parentanchor = center
					using = Master_Button_Modify_Texture
				}
			}
		}
	}

	# Type button_patron_entry = button_standard {
	# 	size = { 500 100 }
	# 	maximumsize = { 500 100 }

	# 	hbox = {
	# 		button = {
	# 			size = { 100 100 }
	# 			alwaystransparent = yes
	# 			background = {
	# 				texture = "gfx/interface/component_tiles/tile_selected.dds"
	# 				spriteType = Corneredtiled
	# 				spriteborder = { 6 6 }
	# 				shaderfile = "gfx/FX/pdxgui_default.shader"
	# 			}
	# 			icon = {
	# 				block "patron_entry_icon" {
	# 					texture = "gfx/interface/patrons/patron_daedra.dds"
	# 				}
	# 				size = { 84 84 }
	# 				parentanchor = center
	# 			}
	# 			icon = {
	# 				texture = "gfx/interface/component_tiles/tile_dark_area_02.dds"
	# 				position = { 100 2 }
	# 				size = { 396 96 }
	# 				alwaystransparent = yes
	# 				layer = bottom
	# 				alpha = 0.7
	# 				modify_texture = {
	# 					name = "mask_1"
	# 					texture = "gfx/interface/component_masks/mask_culture_era_tab.dds"
	# 					blend_mode = alphamultiply
	# 					rotate_uv = 0
	# 				}
	# 			}
	# 		}

	# 		spacer = {
	# 			size = { 9 0 }
	# 		}

	# 		vbox = {
	# 			spacer = {
	# 				size = { 0 4 }
	# 			}
	# 			layoutpolicy_horizontal = expanding
	# 			layoutpolicy_vertical = expanding
	# 			hbox = {
	# 				layoutpolicy_horizontal = expanding
	# 				textbox = {
	# 					font = StandardGameFont
	# 					fontcolor = { 1 1 1 1 }
	# 					fontsize = 16
	# 					block "patron_entry_name" {
	# 						text = patron_azura_name
	# 					}
	# 					autoresize = no
	# 					layoutpolicy_horizontal = expanding
	# 					elide = right
	# 					minimumsize = { -1 16 }
	# 					align = left
	# 				}
	# 			}
	# 			spacer = {
	# 				size = { 0 7 }
	# 			}
	# 			textbox = {
	# 				font = StandardGameFont
	# 				fontcolor = { 0.8 0.8 0.8 1 }
	# 				fontsize = 12
	# 				block "patron_entry_desc" {
	# 					text = patron_azura_long_desc
	# 				}
	# 				autoresize = no
	# 				layoutpolicy_horizontal = expanding
	# 				layoutpolicy_vertical = expanding
	# 				elide = right
	# 				multiline = yes
	# 				align = top|left
	# 			}
	# 			spacer = {
	# 				size = { 0 3 }
	# 			}
	# 		}
	# 		spacer = {
	# 			size = { 9 0 }
	# 		}
	# 	}
	# }

	Type button_patron_decision_entry = button_standard {
		size = { 200 40 }
		maximumsize = { 200 40 }

		#text = "[Decision.GetTitleForPlayer]"
		#tooltip = "[Localize( Concatenate( Decision.GetShortDescForPlayer, 'tooltip' ) )]"

		onclick = "[OpenDecisionDetailView(Decision.Self)]"
		down = "[DecisionsViewItem.IsSelected]"
		#onclick = "[GetVariableSystem.Set( 'patron_decision_button', Decision.GetTitleForPlayer )]"
		#down = "[GetVariableSystem.HasValue( 'patron_decision_button', Decision.GetTitleForPlayer )]" #does this get cleared? also is it necessary
		#down = "[EqualTo_string( GetVariableSystem.Get( 'patron_decision_button' ), Decision.GetTitleForPlayer )]"

		widget = {
			scissor = yes
			parentanchor = right|top

			size = { 110 38 }

			icon = {
				name = "illustration"
				parentanchor = right|top
				size = { 110 44 }

				mirror = horizontal
				texture = "[Decision.GetPicture]"
				alpha = 0.4

				visible = "[Decision.IsPossibleForPlayer]"

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}

			highlight_icon = {
				parentanchor = right|top
				size = { 110 44 }

				mirror = horizontal
				texture = "[Decision.GetPicture]"
				alpha = 0.4

				visible = "[Not(Decision.IsPossibleForPlayer)]"

				effectname = "GreyedOut"

				tintcolor = { 0.6 0.6 0.6 0.7 }

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}
		}

		hbox = {
			margin = { 10 0 }

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title"
				text = "[Decision.GetTitleForPlayer]"
				visible = "[Decision.IsPossibleForPlayer]"
				default_format = "#clickable"
				fontsize = 14
				align = nobaseline
			}

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title2"
				text = "[Decision.GetTitleForPlayer]"
				visible = "[Not(Decision.IsPossibleForPlayer)]"
				default_format = "#low"
				fontsize = 14
				align = nobaseline
			}
		}
	}

	Type button_patron_major_decision_entry = button_standard {
		size = { 300 50 }
		maximumsize = { 300 50 }

		#text = "[Decision.GetTitleForPlayer]"
		tooltip = "[Localize( Concatenate( Decision.GetShortDescForPlayer, 'tooltip' ) )]"

		onclick = "[OpenDecisionDetailView(Decision.Self)]"
		down = "[DecisionsViewItem.IsSelected]"
		#onclick = "[GetVariableSystem.Set( 'patron_decision_button', Decision.GetTitleForPlayer )]"
		#down = "[GetVariableSystem.HasValue( 'patron_decision_button', Decision.GetTitleForPlayer )]"

		widget = {
			scissor = yes
			parentanchor = right|top

			size = { 165 48 }

			icon = {
				name = "illustration"
				parentanchor = right|top
				size = { 165 66 }

				mirror = horizontal
				texture = "[Decision.GetPicture]"
				alpha = 0.4

				visible = "[Decision.IsPossibleForPlayer]"

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}

			highlight_icon = {
				parentanchor = right|top
				size = { 165 66 }

				mirror = horizontal
				texture = "[Decision.GetPicture]"
				alpha = 0.4

				visible = "[Not(Decision.IsPossibleForPlayer)]"

				effectname = "GreyedOut"

				tintcolor = { 0.6 0.6 0.6 0.7 }

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}
		}

		hbox = {
			margin = { 10 0 }

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title"
				text = "[Decision.GetTitleForPlayer]"
				visible = "[Decision.IsPossibleForPlayer]"
				default_format = "#clickable"
				fontsize = 18
				align = nobaseline
			}

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title2"
				text = "[Decision.GetTitleForPlayer]"
				visible = "[Not(Decision.IsPossibleForPlayer)]"
				default_format = "#low"
				fontsize = 18
				align = nobaseline
			}
		}
	}
	Type progressbar_ardor = icon
	{
		shaderfile = "gfx/FX/pdxgui_repeat_texture.shader"
		alpha = 0.8

		block "bar_color"
		{
			# texture = "gfx/interface/colors/red.dds"
		}

		modify_texture = {
			texture = "gfx/interface/patron_window/mask_rough_edges_down_top.dds"
			spriteType = Corneredtiled
			spriteborder = { 20 20 }
			blend_mode = alphamultiply
			texture_density = 5
		}

		modify_texture = {
			texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
			blend_mode = alphamultiply
			alpha = 0.3
		}

		modify_texture = {
			texture = "gfx/interface/component_masks/mask_scratches.dds"
			blend_mode = alphamultiply
			spriteType = corneredtiled
			alpha = 0.3
			texture_density = 3
		}

		modify_texture = {
			name = "flash"
			texture = "gfx/interface/colors/white.dds"
			blend_mode = colordodge
			alpha = 0
		}

		modify_texture = {
			name = "clouds"
			texture = "gfx/interface/component_masks/mask_clouds_solid.dds"
			blend_mode = mask
			spriteType = corneredtiled
			texture_density = 1
		}

		modify_texture = {
			block "bar_color_flow"
			{
				# texture = "gfx/interface/colors/yellow.dds"
				alpha = 0.3
			}
			blend_mode = colordodge
		}

		state = {
			name = a
			next = b
			trigger_on_create = yes

			modify_texture = {
				name = "clouds"
				translate_uv = { 1 0 }
			}
		}

		state = {
			name = b
			next = a
			duration = 15

			modify_texture = {
				name = "clouds"
				translate_uv = { -1 0 }
			}
		}
	}
}